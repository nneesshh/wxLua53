// ---------------------------------------------------------------------------
// ../modules/wxbind/src/wxxml_xml.cpp was generated by genwxbind.lua 
//
// Any changes made to this file will be lost when the file is regenerated.
// ---------------------------------------------------------------------------


#include "wx/wxprec.h"

#ifdef __BORLANDC__
    #pragma hdrstop
#endif

#ifndef WX_PRECOMP
     #include "wx/wx.h"
#endif

#include "wxlua/wxlstate.h"
#include "wxbind/include/wxxml_bind.h"

#ifdef __GNUC__
    #pragma GCC diagnostic ignored "-Wunused-variable"
#endif // __GNUC__


#if wxLUA_USE_wxXML && wxUSE_XML
// ---------------------------------------------------------------------------
// Bind class wxXmlAttribute
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxXmlAttribute'
int wxluatype_wxXmlAttribute = WXLUA_TUNKNOWN;

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlAttribute_GetName[] = { &wxluatype_wxXmlAttribute, NULL };
static int LUACALL wxLua_wxXmlAttribute_GetName(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlAttribute_GetName[1] = {{ wxLua_wxXmlAttribute_GetName, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxXmlAttribute_GetName }};
//     const wxString& GetName() const;
static int LUACALL wxLua_wxXmlAttribute_GetName(lua_State *L)
{
    // get this
    wxXmlAttribute * self = (wxXmlAttribute *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlAttribute);
    // call GetName
    wxString returns = (self->GetName());
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlAttribute_GetNext[] = { &wxluatype_wxXmlAttribute, NULL };
static int LUACALL wxLua_wxXmlAttribute_GetNext(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlAttribute_GetNext[1] = {{ wxLua_wxXmlAttribute_GetNext, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxXmlAttribute_GetNext }};
//     wxXmlAttribute *GetNext() const;
static int LUACALL wxLua_wxXmlAttribute_GetNext(lua_State *L)
{
    // get this
    wxXmlAttribute * self = (wxXmlAttribute *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlAttribute);
    // call GetNext
    wxXmlAttribute* returns = (wxXmlAttribute*)self->GetNext();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxXmlAttribute);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlAttribute_GetValue[] = { &wxluatype_wxXmlAttribute, NULL };
static int LUACALL wxLua_wxXmlAttribute_GetValue(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlAttribute_GetValue[1] = {{ wxLua_wxXmlAttribute_GetValue, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxXmlAttribute_GetValue }};
//     const wxString& GetValue() const;
static int LUACALL wxLua_wxXmlAttribute_GetValue(lua_State *L)
{
    // get this
    wxXmlAttribute * self = (wxXmlAttribute *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlAttribute);
    // call GetValue
    wxString returns = (self->GetValue());
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlAttribute_SetName[] = { &wxluatype_wxXmlAttribute, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxXmlAttribute_SetName(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlAttribute_SetName[1] = {{ wxLua_wxXmlAttribute_SetName, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxXmlAttribute_SetName }};
//     void SetName(const wxString& name);
static int LUACALL wxLua_wxXmlAttribute_SetName(lua_State *L)
{
    // const wxString name
    const wxString name = wxlua_getwxStringtype(L, 2);
    // get this
    wxXmlAttribute * self = (wxXmlAttribute *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlAttribute);
    // call SetName
    self->SetName(name);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlAttribute_SetNext[] = { &wxluatype_wxXmlAttribute, &wxluatype_wxXmlAttribute, NULL };
static int LUACALL wxLua_wxXmlAttribute_SetNext(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlAttribute_SetNext[1] = {{ wxLua_wxXmlAttribute_SetNext, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxXmlAttribute_SetNext }};
//     void SetNext(wxXmlAttribute *next);
static int LUACALL wxLua_wxXmlAttribute_SetNext(lua_State *L)
{
    // wxXmlAttribute next
    wxXmlAttribute * next = (wxXmlAttribute *)wxluaT_getuserdatatype(L, 2, wxluatype_wxXmlAttribute);
    // get this
    wxXmlAttribute * self = (wxXmlAttribute *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlAttribute);
    // call SetNext
    self->SetNext(next);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlAttribute_SetValue[] = { &wxluatype_wxXmlAttribute, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxXmlAttribute_SetValue(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlAttribute_SetValue[1] = {{ wxLua_wxXmlAttribute_SetValue, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxXmlAttribute_SetValue }};
//     void SetValue(const wxString& value);
static int LUACALL wxLua_wxXmlAttribute_SetValue(lua_State *L)
{
    // const wxString value
    const wxString value = wxlua_getwxStringtype(L, 2);
    // get this
    wxXmlAttribute * self = (wxXmlAttribute *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlAttribute);
    // call SetValue
    self->SetValue(value);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlAttribute_delete[] = { &wxluatype_wxXmlAttribute, NULL };
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlAttribute_delete[1] = {{ wxlua_userdata_delete, WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, 1, 1, s_wxluatypeArray_wxLua_wxXmlAttribute_delete }};

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlAttribute_constructor1[] = { &wxluatype_TSTRING, &wxluatype_TSTRING, &wxluatype_wxXmlAttribute, NULL };
static int LUACALL wxLua_wxXmlAttribute_constructor1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlAttribute_constructor1[1] = {{ wxLua_wxXmlAttribute_constructor1, WXLUAMETHOD_CONSTRUCTOR, 2, 3, s_wxluatypeArray_wxLua_wxXmlAttribute_constructor1 }};
//     wxXmlAttribute(const wxString& name, const wxString& value, wxXmlAttribute *next = NULL);
static int LUACALL wxLua_wxXmlAttribute_constructor1(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // wxXmlAttribute next = NULL
    wxXmlAttribute * next = (argCount >= 3 ? (wxXmlAttribute *)wxluaT_getuserdatatype(L, 3, wxluatype_wxXmlAttribute) : NULL);
    // const wxString value
    const wxString value = wxlua_getwxStringtype(L, 2);
    // const wxString name
    const wxString name = wxlua_getwxStringtype(L, 1);
    // call constructor
    wxXmlAttribute* returns = new wxXmlAttribute(name, value, next);
    // add to tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxXmlAttribute);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxXmlAttribute);

    return 1;
}

static int LUACALL wxLua_wxXmlAttribute_constructor(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlAttribute_constructor[1] = {{ wxLua_wxXmlAttribute_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 0, g_wxluaargtypeArray_None }};
//     wxXmlAttribute();
static int LUACALL wxLua_wxXmlAttribute_constructor(lua_State *L)
{
    // call constructor
    wxXmlAttribute* returns = new wxXmlAttribute();
    // add to tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxXmlAttribute);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxXmlAttribute);

    return 1;
}




#if (wxLUA_USE_wxXML && wxUSE_XML)
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlAttribute_constructor_overload[] =
{
    { wxLua_wxXmlAttribute_constructor1, WXLUAMETHOD_CONSTRUCTOR, 2, 3, s_wxluatypeArray_wxLua_wxXmlAttribute_constructor1 },
    { wxLua_wxXmlAttribute_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 0, g_wxluaargtypeArray_None },
};
static int s_wxluafunc_wxLua_wxXmlAttribute_constructor_overload_count = sizeof(s_wxluafunc_wxLua_wxXmlAttribute_constructor_overload)/sizeof(wxLuaBindCFunc);

#endif // (wxLUA_USE_wxXML && wxUSE_XML)

void wxLua_wxXmlAttribute_delete_function(void** p)
{
    wxXmlAttribute* o = (wxXmlAttribute*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxXmlAttribute_methods[] = {
    { "GetName", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlAttribute_GetName, 1, NULL },
    { "GetNext", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlAttribute_GetNext, 1, NULL },
    { "GetValue", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlAttribute_GetValue, 1, NULL },
    { "SetName", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlAttribute_SetName, 1, NULL },
    { "SetNext", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlAttribute_SetNext, 1, NULL },
    { "SetValue", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlAttribute_SetValue, 1, NULL },
    { "delete", WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, s_wxluafunc_wxLua_wxXmlAttribute_delete, 1, NULL },

#if (wxLUA_USE_wxXML && wxUSE_XML)
    { "wxXmlAttribute", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxXmlAttribute_constructor_overload, s_wxluafunc_wxLua_wxXmlAttribute_constructor_overload_count, 0 },
#endif // (wxLUA_USE_wxXML && wxUSE_XML)

    { 0, 0, 0, 0 },
};

int wxXmlAttribute_methodCount = sizeof(wxXmlAttribute_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_wxXML && wxUSE_XML


#if wxLUA_USE_wxXML && wxUSE_XML
// ---------------------------------------------------------------------------
// Bind class wxXmlNode
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxXmlNode'
int wxluatype_wxXmlNode = WXLUA_TUNKNOWN;

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlNode_AddAttribute1[] = { &wxluatype_wxXmlNode, &wxluatype_wxXmlAttribute, NULL };
static int LUACALL wxLua_wxXmlNode_AddAttribute1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlNode_AddAttribute1[1] = {{ wxLua_wxXmlNode_AddAttribute1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxXmlNode_AddAttribute1 }};
//     virtual void AddAttribute(%ungc wxXmlAttribute *attr);
static int LUACALL wxLua_wxXmlNode_AddAttribute1(lua_State *L)
{
    // wxXmlAttribute attr
    wxXmlAttribute * attr = (wxXmlAttribute *)wxluaT_getuserdatatype(L, 2, wxluatype_wxXmlAttribute);
    if (wxluaO_isgcobject(L, attr)) wxluaO_undeletegcobject(L, attr);
    // get this
    wxXmlNode * self = (wxXmlNode *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlNode);
    // call AddAttribute
    self->AddAttribute(attr);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlNode_AddAttribute[] = { &wxluatype_wxXmlNode, &wxluatype_TSTRING, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxXmlNode_AddAttribute(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlNode_AddAttribute[1] = {{ wxLua_wxXmlNode_AddAttribute, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxXmlNode_AddAttribute }};
//     virtual void AddAttribute(const wxString& name, const wxString& value);
static int LUACALL wxLua_wxXmlNode_AddAttribute(lua_State *L)
{
    // const wxString value
    const wxString value = wxlua_getwxStringtype(L, 3);
    // const wxString name
    const wxString name = wxlua_getwxStringtype(L, 2);
    // get this
    wxXmlNode * self = (wxXmlNode *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlNode);
    // call AddAttribute
    self->AddAttribute(name, value);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlNode_AddChild[] = { &wxluatype_wxXmlNode, &wxluatype_wxXmlNode, NULL };
static int LUACALL wxLua_wxXmlNode_AddChild(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlNode_AddChild[1] = {{ wxLua_wxXmlNode_AddChild, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxXmlNode_AddChild }};
//     virtual void AddChild(%ungc wxXmlNode *child);
static int LUACALL wxLua_wxXmlNode_AddChild(lua_State *L)
{
    // wxXmlNode child
    wxXmlNode * child = (wxXmlNode *)wxluaT_getuserdatatype(L, 2, wxluatype_wxXmlNode);
    if (wxluaO_isgcobject(L, child)) wxluaO_undeletegcobject(L, child);
    // get this
    wxXmlNode * self = (wxXmlNode *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlNode);
    // call AddChild
    self->AddChild(child);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlNode_DeleteAttribute[] = { &wxluatype_wxXmlNode, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxXmlNode_DeleteAttribute(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlNode_DeleteAttribute[1] = {{ wxLua_wxXmlNode_DeleteAttribute, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxXmlNode_DeleteAttribute }};
//     virtual bool DeleteAttribute(const wxString& name);
static int LUACALL wxLua_wxXmlNode_DeleteAttribute(lua_State *L)
{
    // const wxString name
    const wxString name = wxlua_getwxStringtype(L, 2);
    // get this
    wxXmlNode * self = (wxXmlNode *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlNode);
    // call DeleteAttribute
    bool returns = (self->DeleteAttribute(name));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

#define wxLua_wxXmlNode_GetAttribute wxLua_wxXmlNode_GetAttributePtr
static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlNode_GetAttribute[] = { &wxluatype_wxXmlNode, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxXmlNode_GetAttribute(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlNode_GetAttribute[1] = {{ wxLua_wxXmlNode_GetAttribute, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxXmlNode_GetAttribute }};
// %override wxLua_wxXmlNode_GetAttributePtr
// %rename GetAttributePtr bool GetAttribute(const wxString& attrName, wxString *value) const;
static int LUACALL wxLua_wxXmlNode_GetAttributePtr(lua_State *L)
{
    // wxString *value
    wxString value;
    // const wxString& attrName
    wxString attrName = wxlua_getwxStringtype(L, 2);
    // get this
    wxXmlNode *self = (wxXmlNode *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlNode);
    // call GetAttribute
    bool returns = self->GetAttribute(attrName, &value);
    // push the result number
    lua_pushboolean(L, returns);
    // push the result string
    wxlua_pushwxString(L, value);
    // return the number of parameters
    return 2;
}


static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlNode_GetAttributes[] = { &wxluatype_wxXmlNode, NULL };
static int LUACALL wxLua_wxXmlNode_GetAttributes(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlNode_GetAttributes[1] = {{ wxLua_wxXmlNode_GetAttributes, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxXmlNode_GetAttributes }};
//     wxXmlAttribute *GetAttributes() const;
static int LUACALL wxLua_wxXmlNode_GetAttributes(lua_State *L)
{
    // get this
    wxXmlNode * self = (wxXmlNode *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlNode);
    // call GetAttributes
    wxXmlAttribute* returns = (wxXmlAttribute*)self->GetAttributes();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxXmlAttribute);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlNode_GetChildren[] = { &wxluatype_wxXmlNode, NULL };
static int LUACALL wxLua_wxXmlNode_GetChildren(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlNode_GetChildren[1] = {{ wxLua_wxXmlNode_GetChildren, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxXmlNode_GetChildren }};
//     wxXmlNode *GetChildren() const;
static int LUACALL wxLua_wxXmlNode_GetChildren(lua_State *L)
{
    // get this
    wxXmlNode * self = (wxXmlNode *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlNode);
    // call GetChildren
    wxXmlNode* returns = (wxXmlNode*)self->GetChildren();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxXmlNode);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlNode_GetContent[] = { &wxluatype_wxXmlNode, NULL };
static int LUACALL wxLua_wxXmlNode_GetContent(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlNode_GetContent[1] = {{ wxLua_wxXmlNode_GetContent, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxXmlNode_GetContent }};
//     const wxString& GetContent() const;
static int LUACALL wxLua_wxXmlNode_GetContent(lua_State *L)
{
    // get this
    wxXmlNode * self = (wxXmlNode *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlNode);
    // call GetContent
    wxString returns = (self->GetContent());
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlNode_GetDepth[] = { &wxluatype_wxXmlNode, &wxluatype_wxXmlNode, NULL };
static int LUACALL wxLua_wxXmlNode_GetDepth(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlNode_GetDepth[1] = {{ wxLua_wxXmlNode_GetDepth, WXLUAMETHOD_METHOD, 1, 2, s_wxluatypeArray_wxLua_wxXmlNode_GetDepth }};
//     int GetDepth(wxXmlNode *grandparent = NULL) const;
static int LUACALL wxLua_wxXmlNode_GetDepth(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // wxXmlNode grandparent = NULL
    wxXmlNode * grandparent = (argCount >= 2 ? (wxXmlNode *)wxluaT_getuserdatatype(L, 2, wxluatype_wxXmlNode) : NULL);
    // get this
    wxXmlNode * self = (wxXmlNode *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlNode);
    // call GetDepth
    int returns = (self->GetDepth(grandparent));
    // push the result integer
    lua_pushinteger(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlNode_GetLineNumber[] = { &wxluatype_wxXmlNode, NULL };
static int LUACALL wxLua_wxXmlNode_GetLineNumber(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlNode_GetLineNumber[1] = {{ wxLua_wxXmlNode_GetLineNumber, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxXmlNode_GetLineNumber }};
//     int GetLineNumber() const;
static int LUACALL wxLua_wxXmlNode_GetLineNumber(lua_State *L)
{
    // get this
    wxXmlNode * self = (wxXmlNode *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlNode);
    // call GetLineNumber
    int returns = (self->GetLineNumber());
    // push the result integer
    lua_pushinteger(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlNode_GetName[] = { &wxluatype_wxXmlNode, NULL };
static int LUACALL wxLua_wxXmlNode_GetName(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlNode_GetName[1] = {{ wxLua_wxXmlNode_GetName, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxXmlNode_GetName }};
//     const wxString& GetName() const;
static int LUACALL wxLua_wxXmlNode_GetName(lua_State *L)
{
    // get this
    wxXmlNode * self = (wxXmlNode *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlNode);
    // call GetName
    wxString returns = (self->GetName());
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlNode_GetNext[] = { &wxluatype_wxXmlNode, NULL };
static int LUACALL wxLua_wxXmlNode_GetNext(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlNode_GetNext[1] = {{ wxLua_wxXmlNode_GetNext, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxXmlNode_GetNext }};
//     wxXmlNode *GetNext() const;
static int LUACALL wxLua_wxXmlNode_GetNext(lua_State *L)
{
    // get this
    wxXmlNode * self = (wxXmlNode *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlNode);
    // call GetNext
    wxXmlNode* returns = (wxXmlNode*)self->GetNext();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxXmlNode);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlNode_GetNoConversion[] = { &wxluatype_wxXmlNode, NULL };
static int LUACALL wxLua_wxXmlNode_GetNoConversion(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlNode_GetNoConversion[1] = {{ wxLua_wxXmlNode_GetNoConversion, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxXmlNode_GetNoConversion }};
//     bool GetNoConversion() const;
static int LUACALL wxLua_wxXmlNode_GetNoConversion(lua_State *L)
{
    // get this
    wxXmlNode * self = (wxXmlNode *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlNode);
    // call GetNoConversion
    bool returns = (self->GetNoConversion());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlNode_GetNodeContent[] = { &wxluatype_wxXmlNode, NULL };
static int LUACALL wxLua_wxXmlNode_GetNodeContent(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlNode_GetNodeContent[1] = {{ wxLua_wxXmlNode_GetNodeContent, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxXmlNode_GetNodeContent }};
//     wxString GetNodeContent() const;
static int LUACALL wxLua_wxXmlNode_GetNodeContent(lua_State *L)
{
    // get this
    wxXmlNode * self = (wxXmlNode *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlNode);
    // call GetNodeContent
    wxString returns = (self->GetNodeContent());
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlNode_GetParent[] = { &wxluatype_wxXmlNode, NULL };
static int LUACALL wxLua_wxXmlNode_GetParent(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlNode_GetParent[1] = {{ wxLua_wxXmlNode_GetParent, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxXmlNode_GetParent }};
//     wxXmlNode *GetParent() const;
static int LUACALL wxLua_wxXmlNode_GetParent(lua_State *L)
{
    // get this
    wxXmlNode * self = (wxXmlNode *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlNode);
    // call GetParent
    wxXmlNode* returns = (wxXmlNode*)self->GetParent();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxXmlNode);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlNode_GetType[] = { &wxluatype_wxXmlNode, NULL };
static int LUACALL wxLua_wxXmlNode_GetType(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlNode_GetType[1] = {{ wxLua_wxXmlNode_GetType, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxXmlNode_GetType }};
//     wxXmlNodeType GetType() const;
static int LUACALL wxLua_wxXmlNode_GetType(lua_State *L)
{
    // get this
    wxXmlNode * self = (wxXmlNode *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlNode);
    // call GetType
    wxXmlNodeType returns = (self->GetType());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlNode_HasAttribute[] = { &wxluatype_wxXmlNode, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxXmlNode_HasAttribute(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlNode_HasAttribute[1] = {{ wxLua_wxXmlNode_HasAttribute, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxXmlNode_HasAttribute }};
//     bool HasAttribute(const wxString& attrName) const;
static int LUACALL wxLua_wxXmlNode_HasAttribute(lua_State *L)
{
    // const wxString attrName
    const wxString attrName = wxlua_getwxStringtype(L, 2);
    // get this
    wxXmlNode * self = (wxXmlNode *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlNode);
    // call HasAttribute
    bool returns = (self->HasAttribute(attrName));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlNode_InsertChild[] = { &wxluatype_wxXmlNode, &wxluatype_wxXmlNode, &wxluatype_wxXmlNode, NULL };
static int LUACALL wxLua_wxXmlNode_InsertChild(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlNode_InsertChild[1] = {{ wxLua_wxXmlNode_InsertChild, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxXmlNode_InsertChild }};
//     virtual bool InsertChild(%ungc wxXmlNode *child, wxXmlNode *followingNode);
static int LUACALL wxLua_wxXmlNode_InsertChild(lua_State *L)
{
    // wxXmlNode followingNode
    wxXmlNode * followingNode = (wxXmlNode *)wxluaT_getuserdatatype(L, 3, wxluatype_wxXmlNode);
    // wxXmlNode child
    wxXmlNode * child = (wxXmlNode *)wxluaT_getuserdatatype(L, 2, wxluatype_wxXmlNode);
    if (wxluaO_isgcobject(L, child)) wxluaO_undeletegcobject(L, child);
    // get this
    wxXmlNode * self = (wxXmlNode *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlNode);
    // call InsertChild
    bool returns = (self->InsertChild(child, followingNode));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlNode_InsertChildAfter[] = { &wxluatype_wxXmlNode, &wxluatype_wxXmlNode, &wxluatype_wxXmlNode, NULL };
static int LUACALL wxLua_wxXmlNode_InsertChildAfter(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlNode_InsertChildAfter[1] = {{ wxLua_wxXmlNode_InsertChildAfter, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxXmlNode_InsertChildAfter }};
//     virtual bool InsertChildAfter(%ungc wxXmlNode *child, wxXmlNode *precedingNode);
static int LUACALL wxLua_wxXmlNode_InsertChildAfter(lua_State *L)
{
    // wxXmlNode precedingNode
    wxXmlNode * precedingNode = (wxXmlNode *)wxluaT_getuserdatatype(L, 3, wxluatype_wxXmlNode);
    // wxXmlNode child
    wxXmlNode * child = (wxXmlNode *)wxluaT_getuserdatatype(L, 2, wxluatype_wxXmlNode);
    if (wxluaO_isgcobject(L, child)) wxluaO_undeletegcobject(L, child);
    // get this
    wxXmlNode * self = (wxXmlNode *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlNode);
    // call InsertChildAfter
    bool returns = (self->InsertChildAfter(child, precedingNode));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlNode_IsWhitespaceOnly[] = { &wxluatype_wxXmlNode, NULL };
static int LUACALL wxLua_wxXmlNode_IsWhitespaceOnly(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlNode_IsWhitespaceOnly[1] = {{ wxLua_wxXmlNode_IsWhitespaceOnly, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxXmlNode_IsWhitespaceOnly }};
//     bool IsWhitespaceOnly() const;
static int LUACALL wxLua_wxXmlNode_IsWhitespaceOnly(lua_State *L)
{
    // get this
    wxXmlNode * self = (wxXmlNode *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlNode);
    // call IsWhitespaceOnly
    bool returns = (self->IsWhitespaceOnly());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlNode_RemoveChild[] = { &wxluatype_wxXmlNode, &wxluatype_wxXmlNode, NULL };
static int LUACALL wxLua_wxXmlNode_RemoveChild(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlNode_RemoveChild[1] = {{ wxLua_wxXmlNode_RemoveChild, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxXmlNode_RemoveChild }};
// %override wxLua_wxXmlNode_RemoveChild
//     bool RemoveChild(%gc wxXmlNode *child)
static int LUACALL wxLua_wxXmlNode_RemoveChild(lua_State *L)
{
    // wxXmlNode child
    wxXmlNode * child = (wxXmlNode *)wxluaT_getuserdatatype(L, 2, wxluatype_wxXmlNode);
    // get this
    wxXmlNode * self = (wxXmlNode *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlNode);
    // call RemoveChild
    bool returns = (self->RemoveChild(child));

    if (returns && !wxluaO_isgcobject(L, child))
        wxluaO_addgcobject(L, child, wxluatype_wxXmlNode);

    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}


static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlNode_SetAttributes[] = { &wxluatype_wxXmlNode, &wxluatype_wxXmlAttribute, NULL };
static int LUACALL wxLua_wxXmlNode_SetAttributes(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlNode_SetAttributes[1] = {{ wxLua_wxXmlNode_SetAttributes, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxXmlNode_SetAttributes }};
//     void SetAttributes(%ungc wxXmlAttribute *attr);
static int LUACALL wxLua_wxXmlNode_SetAttributes(lua_State *L)
{
    // wxXmlAttribute attr
    wxXmlAttribute * attr = (wxXmlAttribute *)wxluaT_getuserdatatype(L, 2, wxluatype_wxXmlAttribute);
    if (wxluaO_isgcobject(L, attr)) wxluaO_undeletegcobject(L, attr);
    // get this
    wxXmlNode * self = (wxXmlNode *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlNode);
    // call SetAttributes
    self->SetAttributes(attr);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlNode_SetChildren[] = { &wxluatype_wxXmlNode, &wxluatype_wxXmlNode, NULL };
static int LUACALL wxLua_wxXmlNode_SetChildren(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlNode_SetChildren[1] = {{ wxLua_wxXmlNode_SetChildren, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxXmlNode_SetChildren }};
//     void SetChildren(%ungc wxXmlNode *child);
static int LUACALL wxLua_wxXmlNode_SetChildren(lua_State *L)
{
    // wxXmlNode child
    wxXmlNode * child = (wxXmlNode *)wxluaT_getuserdatatype(L, 2, wxluatype_wxXmlNode);
    if (wxluaO_isgcobject(L, child)) wxluaO_undeletegcobject(L, child);
    // get this
    wxXmlNode * self = (wxXmlNode *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlNode);
    // call SetChildren
    self->SetChildren(child);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlNode_SetContent[] = { &wxluatype_wxXmlNode, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxXmlNode_SetContent(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlNode_SetContent[1] = {{ wxLua_wxXmlNode_SetContent, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxXmlNode_SetContent }};
//     void SetContent(const wxString& con);
static int LUACALL wxLua_wxXmlNode_SetContent(lua_State *L)
{
    // const wxString con
    const wxString con = wxlua_getwxStringtype(L, 2);
    // get this
    wxXmlNode * self = (wxXmlNode *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlNode);
    // call SetContent
    self->SetContent(con);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlNode_SetName[] = { &wxluatype_wxXmlNode, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxXmlNode_SetName(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlNode_SetName[1] = {{ wxLua_wxXmlNode_SetName, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxXmlNode_SetName }};
//     void SetName(const wxString& name);
static int LUACALL wxLua_wxXmlNode_SetName(lua_State *L)
{
    // const wxString name
    const wxString name = wxlua_getwxStringtype(L, 2);
    // get this
    wxXmlNode * self = (wxXmlNode *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlNode);
    // call SetName
    self->SetName(name);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlNode_SetNext[] = { &wxluatype_wxXmlNode, &wxluatype_wxXmlNode, NULL };
static int LUACALL wxLua_wxXmlNode_SetNext(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlNode_SetNext[1] = {{ wxLua_wxXmlNode_SetNext, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxXmlNode_SetNext }};
//     void SetNext(wxXmlNode *next);
static int LUACALL wxLua_wxXmlNode_SetNext(lua_State *L)
{
    // wxXmlNode next
    wxXmlNode * next = (wxXmlNode *)wxluaT_getuserdatatype(L, 2, wxluatype_wxXmlNode);
    // get this
    wxXmlNode * self = (wxXmlNode *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlNode);
    // call SetNext
    self->SetNext(next);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlNode_SetNoConversion[] = { &wxluatype_wxXmlNode, &wxluatype_TBOOLEAN, NULL };
static int LUACALL wxLua_wxXmlNode_SetNoConversion(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlNode_SetNoConversion[1] = {{ wxLua_wxXmlNode_SetNoConversion, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxXmlNode_SetNoConversion }};
//     void SetNoConversion(bool noconversion);
static int LUACALL wxLua_wxXmlNode_SetNoConversion(lua_State *L)
{
    // bool noconversion
    bool noconversion = wxlua_getbooleantype(L, 2);
    // get this
    wxXmlNode * self = (wxXmlNode *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlNode);
    // call SetNoConversion
    self->SetNoConversion(noconversion);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlNode_SetParent[] = { &wxluatype_wxXmlNode, &wxluatype_wxXmlNode, NULL };
static int LUACALL wxLua_wxXmlNode_SetParent(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlNode_SetParent[1] = {{ wxLua_wxXmlNode_SetParent, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxXmlNode_SetParent }};
//     void SetParent(wxXmlNode *parent);
static int LUACALL wxLua_wxXmlNode_SetParent(lua_State *L)
{
    // wxXmlNode parent
    wxXmlNode * parent = (wxXmlNode *)wxluaT_getuserdatatype(L, 2, wxluatype_wxXmlNode);
    // get this
    wxXmlNode * self = (wxXmlNode *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlNode);
    // call SetParent
    self->SetParent(parent);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlNode_SetType[] = { &wxluatype_wxXmlNode, &wxluatype_TINTEGER, NULL };
static int LUACALL wxLua_wxXmlNode_SetType(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlNode_SetType[1] = {{ wxLua_wxXmlNode_SetType, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxXmlNode_SetType }};
//     void SetType(wxXmlNodeType type);
static int LUACALL wxLua_wxXmlNode_SetType(lua_State *L)
{
    // wxXmlNodeType type
    wxXmlNodeType type = (wxXmlNodeType)wxlua_getenumtype(L, 2);
    // get this
    wxXmlNode * self = (wxXmlNode *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlNode);
    // call SetType
    self->SetType(type);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlNode_delete[] = { &wxluatype_wxXmlNode, NULL };
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlNode_delete[1] = {{ wxlua_userdata_delete, WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, 1, 1, s_wxluatypeArray_wxLua_wxXmlNode_delete }};

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlNode_constructor2[] = { &wxluatype_TINTEGER, &wxluatype_TSTRING, &wxluatype_TSTRING, &wxluatype_TINTEGER, NULL };
static int LUACALL wxLua_wxXmlNode_constructor2(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlNode_constructor2[1] = {{ wxLua_wxXmlNode_constructor2, WXLUAMETHOD_CONSTRUCTOR, 2, 4, s_wxluatypeArray_wxLua_wxXmlNode_constructor2 }};
// %override wxLua_wxXmlNode_constructor2
//     wxXmlNode(wxXmlNode *parent, wxXmlNodeType type, const wxString& name, const wxString& content = wxEmptyString, wxXmlAttribute *attrs = NULL, wxXmlNode *next = NULL, int lineNo = -1);
static int LUACALL wxLua_wxXmlNode_constructor2(lua_State *L)
{
    // wxXmlNode next
    wxXmlNode * next = (wxXmlNode *)wxluaT_getuserdatatype(L, 6, wxluatype_wxXmlNode);
    // wxXmlAttribute attrs
	wxXmlAttribute * attrs = (wxXmlAttribute *)wxluaT_getuserdatatype(L, 5, wxluatype_wxXmlAttribute);
    // const wxString content
    const wxString content = wxlua_getwxStringtype(L, 4);
    // const wxString name
    const wxString name = wxlua_getwxStringtype(L, 3);
    // wxXmlNodeType type
    wxXmlNodeType type = (wxXmlNodeType)wxlua_getenumtype(L, 2);
    // wxXmlNode parent
    wxXmlNode * parent = (wxXmlNode *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlNode);
    // call constructor
    wxXmlNode *returns = new wxXmlNode(parent, type, name, content, attrs, next);
    // add to tracked memory list
    if (parent == NULL)
        wxluaO_addgcobject(L, returns, wxluatype_wxXmlNode);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxXmlNode);

    return 1;
}


static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlNode_constructor1[] = { &wxluatype_wxXmlNode, &wxluatype_TINTEGER, &wxluatype_TSTRING, &wxluatype_TSTRING, &wxluatype_wxXmlAttribute, &wxluatype_wxXmlNode, &wxluatype_TINTEGER, NULL };
static int LUACALL wxLua_wxXmlNode_constructor1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlNode_constructor1[1] = {{ wxLua_wxXmlNode_constructor1, WXLUAMETHOD_CONSTRUCTOR, 3, 7, s_wxluatypeArray_wxLua_wxXmlNode_constructor1 }};
//     wxXmlNode(wxXmlNode *parent, wxXmlNodeType type, const wxString& name, const wxString& content = wxEmptyString, wxXmlAttribute *attrs = NULL, wxXmlNode *next = NULL, int lineNo = -1);
static int LUACALL wxLua_wxXmlNode_constructor1(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int lineNo = -1
    int lineNo = (argCount >= 7 ? (int)wxlua_getintegertype(L, 7) : -1);
    // wxXmlNode next = NULL
    wxXmlNode * next = (argCount >= 6 ? (wxXmlNode *)wxluaT_getuserdatatype(L, 6, wxluatype_wxXmlNode) : NULL);
    // wxXmlAttribute attrs = NULL
    wxXmlAttribute * attrs = (argCount >= 5 ? (wxXmlAttribute *)wxluaT_getuserdatatype(L, 5, wxluatype_wxXmlAttribute) : NULL);
    // const wxString content = wxEmptyString
    const wxString content = (argCount >= 4 ? wxlua_getwxStringtype(L, 4) : wxString(wxEmptyString));
    // const wxString name
    const wxString name = wxlua_getwxStringtype(L, 3);
    // wxXmlNodeType type
    wxXmlNodeType type = (wxXmlNodeType)wxlua_getenumtype(L, 2);
    // wxXmlNode parent
    wxXmlNode * parent = (wxXmlNode *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlNode);
    // call constructor
    wxXmlNode* returns = new wxXmlNode(parent, type, name, content, attrs, next, lineNo);
    // add to tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxXmlNode);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxXmlNode);

    return 1;
}

static int LUACALL wxLua_wxXmlNode_constructor(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlNode_constructor[1] = {{ wxLua_wxXmlNode_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 0, g_wxluaargtypeArray_None }};
//     wxXmlNode();
static int LUACALL wxLua_wxXmlNode_constructor(lua_State *L)
{
    // call constructor
    wxXmlNode* returns = new wxXmlNode();
    // add to tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxXmlNode);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxXmlNode);

    return 1;
}




#if (wxLUA_USE_wxXML && wxUSE_XML)
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlNode_AddAttribute_overload[] =
{
    { wxLua_wxXmlNode_AddAttribute1, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxXmlNode_AddAttribute1 },
    { wxLua_wxXmlNode_AddAttribute, WXLUAMETHOD_METHOD, 3, 3, s_wxluatypeArray_wxLua_wxXmlNode_AddAttribute },
};
static int s_wxluafunc_wxLua_wxXmlNode_AddAttribute_overload_count = sizeof(s_wxluafunc_wxLua_wxXmlNode_AddAttribute_overload)/sizeof(wxLuaBindCFunc);

// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlNode_constructor_overload[] =
{
    { wxLua_wxXmlNode_constructor2, WXLUAMETHOD_CONSTRUCTOR, 2, 4, s_wxluatypeArray_wxLua_wxXmlNode_constructor2 },
    { wxLua_wxXmlNode_constructor1, WXLUAMETHOD_CONSTRUCTOR, 3, 7, s_wxluatypeArray_wxLua_wxXmlNode_constructor1 },
    { wxLua_wxXmlNode_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 0, g_wxluaargtypeArray_None },
};
static int s_wxluafunc_wxLua_wxXmlNode_constructor_overload_count = sizeof(s_wxluafunc_wxLua_wxXmlNode_constructor_overload)/sizeof(wxLuaBindCFunc);

#endif // (wxLUA_USE_wxXML && wxUSE_XML)

void wxLua_wxXmlNode_delete_function(void** p)
{
    wxXmlNode* o = (wxXmlNode*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxXmlNode_methods[] = {
#if (wxLUA_USE_wxXML && wxUSE_XML)
    { "AddAttribute", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlNode_AddAttribute_overload, s_wxluafunc_wxLua_wxXmlNode_AddAttribute_overload_count, 0 },
#endif // (wxLUA_USE_wxXML && wxUSE_XML)

    { "AddChild", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlNode_AddChild, 1, NULL },
    { "DeleteAttribute", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlNode_DeleteAttribute, 1, NULL },
    { "GetAttribute", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlNode_GetAttribute, 1, NULL },
    { "GetAttributes", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlNode_GetAttributes, 1, NULL },
    { "GetChildren", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlNode_GetChildren, 1, NULL },
    { "GetContent", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlNode_GetContent, 1, NULL },
    { "GetDepth", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlNode_GetDepth, 1, NULL },
    { "GetLineNumber", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlNode_GetLineNumber, 1, NULL },
    { "GetName", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlNode_GetName, 1, NULL },
    { "GetNext", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlNode_GetNext, 1, NULL },
    { "GetNoConversion", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlNode_GetNoConversion, 1, NULL },
    { "GetNodeContent", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlNode_GetNodeContent, 1, NULL },
    { "GetParent", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlNode_GetParent, 1, NULL },
    { "GetType", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlNode_GetType, 1, NULL },
    { "HasAttribute", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlNode_HasAttribute, 1, NULL },
    { "InsertChild", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlNode_InsertChild, 1, NULL },
    { "InsertChildAfter", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlNode_InsertChildAfter, 1, NULL },
    { "IsWhitespaceOnly", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlNode_IsWhitespaceOnly, 1, NULL },
    { "RemoveChild", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlNode_RemoveChild, 1, NULL },
    { "SetAttributes", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlNode_SetAttributes, 1, NULL },
    { "SetChildren", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlNode_SetChildren, 1, NULL },
    { "SetContent", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlNode_SetContent, 1, NULL },
    { "SetName", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlNode_SetName, 1, NULL },
    { "SetNext", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlNode_SetNext, 1, NULL },
    { "SetNoConversion", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlNode_SetNoConversion, 1, NULL },
    { "SetParent", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlNode_SetParent, 1, NULL },
    { "SetType", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlNode_SetType, 1, NULL },
    { "delete", WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, s_wxluafunc_wxLua_wxXmlNode_delete, 1, NULL },

#if (wxLUA_USE_wxXML && wxUSE_XML)
    { "wxXmlNode", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxXmlNode_constructor_overload, s_wxluafunc_wxLua_wxXmlNode_constructor_overload_count, 0 },
#endif // (wxLUA_USE_wxXML && wxUSE_XML)

    { 0, 0, 0, 0 },
};

int wxXmlNode_methodCount = sizeof(wxXmlNode_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_wxXML && wxUSE_XML


#if wxLUA_USE_wxXML && wxUSE_XML
// ---------------------------------------------------------------------------
// Bind class wxXmlDoctype
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxXmlDoctype'
int wxluatype_wxXmlDoctype = WXLUA_TUNKNOWN;

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlDoctype_Clear[] = { &wxluatype_wxXmlDoctype, NULL };
static int LUACALL wxLua_wxXmlDoctype_Clear(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlDoctype_Clear[1] = {{ wxLua_wxXmlDoctype_Clear, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxXmlDoctype_Clear }};
//     void Clear();
static int LUACALL wxLua_wxXmlDoctype_Clear(lua_State *L)
{
    // get this
    wxXmlDoctype * self = (wxXmlDoctype *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlDoctype);
    // call Clear
    self->Clear();

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlDoctype_GetFullString[] = { &wxluatype_wxXmlDoctype, NULL };
static int LUACALL wxLua_wxXmlDoctype_GetFullString(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlDoctype_GetFullString[1] = {{ wxLua_wxXmlDoctype_GetFullString, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxXmlDoctype_GetFullString }};
//     wxString GetFullString() const;
static int LUACALL wxLua_wxXmlDoctype_GetFullString(lua_State *L)
{
    // get this
    wxXmlDoctype * self = (wxXmlDoctype *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlDoctype);
    // call GetFullString
    wxString returns = (self->GetFullString());
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlDoctype_GetPublicId[] = { &wxluatype_wxXmlDoctype, NULL };
static int LUACALL wxLua_wxXmlDoctype_GetPublicId(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlDoctype_GetPublicId[1] = {{ wxLua_wxXmlDoctype_GetPublicId, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxXmlDoctype_GetPublicId }};
//     const wxString& GetPublicId() const;
static int LUACALL wxLua_wxXmlDoctype_GetPublicId(lua_State *L)
{
    // get this
    wxXmlDoctype * self = (wxXmlDoctype *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlDoctype);
    // call GetPublicId
    wxString returns = (self->GetPublicId());
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlDoctype_GetRootName[] = { &wxluatype_wxXmlDoctype, NULL };
static int LUACALL wxLua_wxXmlDoctype_GetRootName(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlDoctype_GetRootName[1] = {{ wxLua_wxXmlDoctype_GetRootName, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxXmlDoctype_GetRootName }};
//     const wxString& GetRootName() const;
static int LUACALL wxLua_wxXmlDoctype_GetRootName(lua_State *L)
{
    // get this
    wxXmlDoctype * self = (wxXmlDoctype *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlDoctype);
    // call GetRootName
    wxString returns = (self->GetRootName());
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlDoctype_GetSystemId[] = { &wxluatype_wxXmlDoctype, NULL };
static int LUACALL wxLua_wxXmlDoctype_GetSystemId(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlDoctype_GetSystemId[1] = {{ wxLua_wxXmlDoctype_GetSystemId, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxXmlDoctype_GetSystemId }};
//     const wxString& GetSystemId() const;
static int LUACALL wxLua_wxXmlDoctype_GetSystemId(lua_State *L)
{
    // get this
    wxXmlDoctype * self = (wxXmlDoctype *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlDoctype);
    // call GetSystemId
    wxString returns = (self->GetSystemId());
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlDoctype_IsValid[] = { &wxluatype_wxXmlDoctype, NULL };
static int LUACALL wxLua_wxXmlDoctype_IsValid(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlDoctype_IsValid[1] = {{ wxLua_wxXmlDoctype_IsValid, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxXmlDoctype_IsValid }};
//     bool IsValid() const;
static int LUACALL wxLua_wxXmlDoctype_IsValid(lua_State *L)
{
    // get this
    wxXmlDoctype * self = (wxXmlDoctype *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlDoctype);
    // call IsValid
    bool returns = (self->IsValid());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlDoctype_constructor[] = { &wxluatype_TSTRING, &wxluatype_TSTRING, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxXmlDoctype_constructor(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlDoctype_constructor[1] = {{ wxLua_wxXmlDoctype_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 3, s_wxluatypeArray_wxLua_wxXmlDoctype_constructor }};
//     wxXmlDoctype(const wxString& name = wxEmptyString, const wxString& sysid = wxEmptyString, const wxString& pubid = wxEmptyString);
static int LUACALL wxLua_wxXmlDoctype_constructor(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // const wxString pubid = wxEmptyString
    const wxString pubid = (argCount >= 3 ? wxlua_getwxStringtype(L, 3) : wxString(wxEmptyString));
    // const wxString sysid = wxEmptyString
    const wxString sysid = (argCount >= 2 ? wxlua_getwxStringtype(L, 2) : wxString(wxEmptyString));
    // const wxString name = wxEmptyString
    const wxString name = (argCount >= 1 ? wxlua_getwxStringtype(L, 1) : wxString(wxEmptyString));
    // call constructor
    wxXmlDoctype* returns = new wxXmlDoctype(name, sysid, pubid);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxXmlDoctype);

    return 1;
}




void wxLua_wxXmlDoctype_delete_function(void** p)
{
    wxXmlDoctype* o = (wxXmlDoctype*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxXmlDoctype_methods[] = {
    { "Clear", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlDoctype_Clear, 1, NULL },
    { "GetFullString", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlDoctype_GetFullString, 1, NULL },
    { "GetPublicId", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlDoctype_GetPublicId, 1, NULL },
    { "GetRootName", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlDoctype_GetRootName, 1, NULL },
    { "GetSystemId", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlDoctype_GetSystemId, 1, NULL },
    { "IsValid", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlDoctype_IsValid, 1, NULL },
    { "wxXmlDoctype", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxXmlDoctype_constructor, 1, NULL },

    { 0, 0, 0, 0 },
};

int wxXmlDoctype_methodCount = sizeof(wxXmlDoctype_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_wxXML && wxUSE_XML


#if wxLUA_USE_wxXML && wxUSE_XML
// ---------------------------------------------------------------------------
// Bind class wxXmlDocument
// ---------------------------------------------------------------------------

// Lua MetaTable Tag for Class 'wxXmlDocument'
int wxluatype_wxXmlDocument = WXLUA_TUNKNOWN;

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlDocument_AppendToProlog[] = { &wxluatype_wxXmlDocument, &wxluatype_wxXmlNode, NULL };
static int LUACALL wxLua_wxXmlDocument_AppendToProlog(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlDocument_AppendToProlog[1] = {{ wxLua_wxXmlDocument_AppendToProlog, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxXmlDocument_AppendToProlog }};
//     void AppendToProlog(wxXmlNode *node);
static int LUACALL wxLua_wxXmlDocument_AppendToProlog(lua_State *L)
{
    // wxXmlNode node
    wxXmlNode * node = (wxXmlNode *)wxluaT_getuserdatatype(L, 2, wxluatype_wxXmlNode);
    // get this
    wxXmlDocument * self = (wxXmlDocument *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlDocument);
    // call AppendToProlog
    self->AppendToProlog(node);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlDocument_DetachDocumentNode[] = { &wxluatype_wxXmlDocument, NULL };
static int LUACALL wxLua_wxXmlDocument_DetachDocumentNode(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlDocument_DetachDocumentNode[1] = {{ wxLua_wxXmlDocument_DetachDocumentNode, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxXmlDocument_DetachDocumentNode }};
//     wxXmlNode *DetachDocumentNode();
static int LUACALL wxLua_wxXmlDocument_DetachDocumentNode(lua_State *L)
{
    // get this
    wxXmlDocument * self = (wxXmlDocument *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlDocument);
    // call DetachDocumentNode
    wxXmlNode* returns = (wxXmlNode*)self->DetachDocumentNode();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxXmlNode);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlDocument_DetachRoot[] = { &wxluatype_wxXmlDocument, NULL };
static int LUACALL wxLua_wxXmlDocument_DetachRoot(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlDocument_DetachRoot[1] = {{ wxLua_wxXmlDocument_DetachRoot, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxXmlDocument_DetachRoot }};
//     wxXmlNode *DetachRoot();
static int LUACALL wxLua_wxXmlDocument_DetachRoot(lua_State *L)
{
    // get this
    wxXmlDocument * self = (wxXmlDocument *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlDocument);
    // call DetachRoot
    wxXmlNode* returns = (wxXmlNode*)self->DetachRoot();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxXmlNode);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlDocument_GetDoctype[] = { &wxluatype_wxXmlDocument, NULL };
static int LUACALL wxLua_wxXmlDocument_GetDoctype(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlDocument_GetDoctype[1] = {{ wxLua_wxXmlDocument_GetDoctype, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxXmlDocument_GetDoctype }};
//     const wxXmlDoctype& GetDoctype() const;
static int LUACALL wxLua_wxXmlDocument_GetDoctype(lua_State *L)
{
    // get this
    wxXmlDocument * self = (wxXmlDocument *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlDocument);
    // call GetDoctype
    const wxXmlDoctype* returns = (const wxXmlDoctype*)&self->GetDoctype();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxXmlDoctype);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlDocument_GetDocumentNode[] = { &wxluatype_wxXmlDocument, NULL };
static int LUACALL wxLua_wxXmlDocument_GetDocumentNode(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlDocument_GetDocumentNode[1] = {{ wxLua_wxXmlDocument_GetDocumentNode, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxXmlDocument_GetDocumentNode }};
//     wxXmlNode *GetDocumentNode() const;
static int LUACALL wxLua_wxXmlDocument_GetDocumentNode(lua_State *L)
{
    // get this
    wxXmlDocument * self = (wxXmlDocument *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlDocument);
    // call GetDocumentNode
    wxXmlNode* returns = (wxXmlNode*)self->GetDocumentNode();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxXmlNode);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlDocument_GetEOL[] = { &wxluatype_wxXmlDocument, NULL };
static int LUACALL wxLua_wxXmlDocument_GetEOL(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlDocument_GetEOL[1] = {{ wxLua_wxXmlDocument_GetEOL, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxXmlDocument_GetEOL }};
//     wxString GetEOL() const;
static int LUACALL wxLua_wxXmlDocument_GetEOL(lua_State *L)
{
    // get this
    wxXmlDocument * self = (wxXmlDocument *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlDocument);
    // call GetEOL
    wxString returns = (self->GetEOL());
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}


#if (!wxUSE_UNICODE) && (wxLUA_USE_wxXML && wxUSE_XML)
static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlDocument_GetEncoding[] = { &wxluatype_wxXmlDocument, NULL };
static int LUACALL wxLua_wxXmlDocument_GetEncoding(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlDocument_GetEncoding[1] = {{ wxLua_wxXmlDocument_GetEncoding, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxXmlDocument_GetEncoding }};
//     wxString GetEncoding() const;
static int LUACALL wxLua_wxXmlDocument_GetEncoding(lua_State *L)
{
    // get this
    wxXmlDocument * self = (wxXmlDocument *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlDocument);
    // call GetEncoding
    wxString returns = (self->GetEncoding());
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

#endif // (!wxUSE_UNICODE) && (wxLUA_USE_wxXML && wxUSE_XML)

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlDocument_GetFileEncoding[] = { &wxluatype_wxXmlDocument, NULL };
static int LUACALL wxLua_wxXmlDocument_GetFileEncoding(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlDocument_GetFileEncoding[1] = {{ wxLua_wxXmlDocument_GetFileEncoding, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxXmlDocument_GetFileEncoding }};
//     const wxString& GetFileEncoding() const;
static int LUACALL wxLua_wxXmlDocument_GetFileEncoding(lua_State *L)
{
    // get this
    wxXmlDocument * self = (wxXmlDocument *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlDocument);
    // call GetFileEncoding
    wxString returns = (self->GetFileEncoding());
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlDocument_GetFileType[] = { &wxluatype_wxXmlDocument, NULL };
static int LUACALL wxLua_wxXmlDocument_GetFileType(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlDocument_GetFileType[1] = {{ wxLua_wxXmlDocument_GetFileType, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxXmlDocument_GetFileType }};
//     wxTextFileType GetFileType() const;
static int LUACALL wxLua_wxXmlDocument_GetFileType(lua_State *L)
{
    // get this
    wxXmlDocument * self = (wxXmlDocument *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlDocument);
    // call GetFileType
    wxTextFileType returns = (self->GetFileType());
    // push the result number
    lua_pushnumber(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlDocument_GetRoot[] = { &wxluatype_wxXmlDocument, NULL };
static int LUACALL wxLua_wxXmlDocument_GetRoot(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlDocument_GetRoot[1] = {{ wxLua_wxXmlDocument_GetRoot, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxXmlDocument_GetRoot }};
//     wxXmlNode *GetRoot() const;
static int LUACALL wxLua_wxXmlDocument_GetRoot(lua_State *L)
{
    // get this
    wxXmlDocument * self = (wxXmlDocument *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlDocument);
    // call GetRoot
    wxXmlNode* returns = (wxXmlNode*)self->GetRoot();
    // push the result datatype
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxXmlNode);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlDocument_GetVersion[] = { &wxluatype_wxXmlDocument, NULL };
static int LUACALL wxLua_wxXmlDocument_GetVersion(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlDocument_GetVersion[1] = {{ wxLua_wxXmlDocument_GetVersion, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxXmlDocument_GetVersion }};
//     const wxString& GetVersion() const;
static int LUACALL wxLua_wxXmlDocument_GetVersion(lua_State *L)
{
    // get this
    wxXmlDocument * self = (wxXmlDocument *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlDocument);
    // call GetVersion
    wxString returns = (self->GetVersion());
    // push the result string
    wxlua_pushwxString(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlDocument_IsOk[] = { &wxluatype_wxXmlDocument, NULL };
static int LUACALL wxLua_wxXmlDocument_IsOk(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlDocument_IsOk[1] = {{ wxLua_wxXmlDocument_IsOk, WXLUAMETHOD_METHOD, 1, 1, s_wxluatypeArray_wxLua_wxXmlDocument_IsOk }};
//     bool IsOk() const;
static int LUACALL wxLua_wxXmlDocument_IsOk(lua_State *L)
{
    // get this
    wxXmlDocument * self = (wxXmlDocument *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlDocument);
    // call IsOk
    bool returns = (self->IsOk());
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlDocument_Load[] = { &wxluatype_wxXmlDocument, &wxluatype_TSTRING, &wxluatype_TSTRING, &wxluatype_TINTEGER, NULL };
static int LUACALL wxLua_wxXmlDocument_Load(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlDocument_Load[1] = {{ wxLua_wxXmlDocument_Load, WXLUAMETHOD_METHOD, 2, 4, s_wxluatypeArray_wxLua_wxXmlDocument_Load }};
//     virtual bool Load(const wxString& filename, const wxString& encoding = "UTF-8", int flags = wxXMLDOC_NONE);
static int LUACALL wxLua_wxXmlDocument_Load(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int flags = wxXMLDOC_NONE
    int flags = (argCount >= 4 ? (int)wxlua_getintegertype(L, 4) : wxXMLDOC_NONE);
    // const wxString encoding = "UTF-8"
    const wxString encoding = (argCount >= 3 ? wxlua_getwxStringtype(L, 3) : wxString(wxT("UTF-8")));
    // const wxString filename
    const wxString filename = wxlua_getwxStringtype(L, 2);
    // get this
    wxXmlDocument * self = (wxXmlDocument *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlDocument);
    // call Load
    bool returns = (self->Load(filename, encoding, flags));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlDocument_Save[] = { &wxluatype_wxXmlDocument, &wxluatype_TSTRING, &wxluatype_TINTEGER, NULL };
static int LUACALL wxLua_wxXmlDocument_Save(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlDocument_Save[1] = {{ wxLua_wxXmlDocument_Save, WXLUAMETHOD_METHOD, 2, 3, s_wxluatypeArray_wxLua_wxXmlDocument_Save }};
//     virtual bool Save(const wxString& filename, int indentstep = 2) const;
static int LUACALL wxLua_wxXmlDocument_Save(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // int indentstep = 2
    int indentstep = (argCount >= 3 ? (int)wxlua_getintegertype(L, 3) : 2);
    // const wxString filename
    const wxString filename = wxlua_getwxStringtype(L, 2);
    // get this
    wxXmlDocument * self = (wxXmlDocument *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlDocument);
    // call Save
    bool returns = (self->Save(filename, indentstep));
    // push the result flag
    lua_pushboolean(L, returns);

    return 1;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlDocument_SetDoctype[] = { &wxluatype_wxXmlDocument, &wxluatype_wxXmlDoctype, NULL };
static int LUACALL wxLua_wxXmlDocument_SetDoctype(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlDocument_SetDoctype[1] = {{ wxLua_wxXmlDocument_SetDoctype, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxXmlDocument_SetDoctype }};
//     void SetDoctype(const wxXmlDoctype& doctype);
static int LUACALL wxLua_wxXmlDocument_SetDoctype(lua_State *L)
{
    // const wxXmlDoctype doctype
    const wxXmlDoctype * doctype = (const wxXmlDoctype *)wxluaT_getuserdatatype(L, 2, wxluatype_wxXmlDoctype);
    // get this
    wxXmlDocument * self = (wxXmlDocument *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlDocument);
    // call SetDoctype
    self->SetDoctype(*doctype);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlDocument_SetDocumentNode[] = { &wxluatype_wxXmlDocument, &wxluatype_wxXmlNode, NULL };
static int LUACALL wxLua_wxXmlDocument_SetDocumentNode(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlDocument_SetDocumentNode[1] = {{ wxLua_wxXmlDocument_SetDocumentNode, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxXmlDocument_SetDocumentNode }};
//     void SetDocumentNode(wxXmlNode *node);
static int LUACALL wxLua_wxXmlDocument_SetDocumentNode(lua_State *L)
{
    // wxXmlNode node
    wxXmlNode * node = (wxXmlNode *)wxluaT_getuserdatatype(L, 2, wxluatype_wxXmlNode);
    // get this
    wxXmlDocument * self = (wxXmlDocument *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlDocument);
    // call SetDocumentNode
    self->SetDocumentNode(node);

    return 0;
}


#if (!wxUSE_UNICODE) && (wxLUA_USE_wxXML && wxUSE_XML)
static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlDocument_SetEncoding[] = { &wxluatype_wxXmlDocument, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxXmlDocument_SetEncoding(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlDocument_SetEncoding[1] = {{ wxLua_wxXmlDocument_SetEncoding, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxXmlDocument_SetEncoding }};
//     void SetEncoding(const wxString& enc);
static int LUACALL wxLua_wxXmlDocument_SetEncoding(lua_State *L)
{
    // const wxString enc
    const wxString enc = wxlua_getwxStringtype(L, 2);
    // get this
    wxXmlDocument * self = (wxXmlDocument *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlDocument);
    // call SetEncoding
    self->SetEncoding(enc);

    return 0;
}

#endif // (!wxUSE_UNICODE) && (wxLUA_USE_wxXML && wxUSE_XML)

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlDocument_SetFileEncoding[] = { &wxluatype_wxXmlDocument, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxXmlDocument_SetFileEncoding(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlDocument_SetFileEncoding[1] = {{ wxLua_wxXmlDocument_SetFileEncoding, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxXmlDocument_SetFileEncoding }};
//     void SetFileEncoding(const wxString& encoding);
static int LUACALL wxLua_wxXmlDocument_SetFileEncoding(lua_State *L)
{
    // const wxString encoding
    const wxString encoding = wxlua_getwxStringtype(L, 2);
    // get this
    wxXmlDocument * self = (wxXmlDocument *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlDocument);
    // call SetFileEncoding
    self->SetFileEncoding(encoding);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlDocument_SetFileType[] = { &wxluatype_wxXmlDocument, &wxluatype_TINTEGER, NULL };
static int LUACALL wxLua_wxXmlDocument_SetFileType(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlDocument_SetFileType[1] = {{ wxLua_wxXmlDocument_SetFileType, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxXmlDocument_SetFileType }};
//     void SetFileType(wxTextFileType fileType);
static int LUACALL wxLua_wxXmlDocument_SetFileType(lua_State *L)
{
    // wxTextFileType fileType
    wxTextFileType fileType = (wxTextFileType)wxlua_getenumtype(L, 2);
    // get this
    wxXmlDocument * self = (wxXmlDocument *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlDocument);
    // call SetFileType
    self->SetFileType(fileType);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlDocument_SetRoot[] = { &wxluatype_wxXmlDocument, &wxluatype_wxXmlNode, NULL };
static int LUACALL wxLua_wxXmlDocument_SetRoot(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlDocument_SetRoot[1] = {{ wxLua_wxXmlDocument_SetRoot, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxXmlDocument_SetRoot }};
//     void SetRoot(%ungc wxXmlNode *node);
static int LUACALL wxLua_wxXmlDocument_SetRoot(lua_State *L)
{
    // wxXmlNode node
    wxXmlNode * node = (wxXmlNode *)wxluaT_getuserdatatype(L, 2, wxluatype_wxXmlNode);
    if (wxluaO_isgcobject(L, node)) wxluaO_undeletegcobject(L, node);
    // get this
    wxXmlDocument * self = (wxXmlDocument *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlDocument);
    // call SetRoot
    self->SetRoot(node);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlDocument_SetVersion[] = { &wxluatype_wxXmlDocument, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxXmlDocument_SetVersion(lua_State *L);
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlDocument_SetVersion[1] = {{ wxLua_wxXmlDocument_SetVersion, WXLUAMETHOD_METHOD, 2, 2, s_wxluatypeArray_wxLua_wxXmlDocument_SetVersion }};
//     void SetVersion(const wxString& version);
static int LUACALL wxLua_wxXmlDocument_SetVersion(lua_State *L)
{
    // const wxString version
    const wxString version = wxlua_getwxStringtype(L, 2);
    // get this
    wxXmlDocument * self = (wxXmlDocument *)wxluaT_getuserdatatype(L, 1, wxluatype_wxXmlDocument);
    // call SetVersion
    self->SetVersion(version);

    return 0;
}

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlDocument_delete[] = { &wxluatype_wxXmlDocument, NULL };
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlDocument_delete[1] = {{ wxlua_userdata_delete, WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, 1, 1, s_wxluatypeArray_wxLua_wxXmlDocument_delete }};

static wxLuaArgType s_wxluatypeArray_wxLua_wxXmlDocument_constructor1[] = { &wxluatype_TSTRING, &wxluatype_TSTRING, NULL };
static int LUACALL wxLua_wxXmlDocument_constructor1(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlDocument_constructor1[1] = {{ wxLua_wxXmlDocument_constructor1, WXLUAMETHOD_CONSTRUCTOR, 1, 2, s_wxluatypeArray_wxLua_wxXmlDocument_constructor1 }};
//     wxXmlDocument(const wxString& filename, const wxString& encoding = "UTF-8");
static int LUACALL wxLua_wxXmlDocument_constructor1(lua_State *L)
{
    // get number of arguments
    int argCount = lua_gettop(L);
    // const wxString encoding = "UTF-8"
    const wxString encoding = (argCount >= 2 ? wxlua_getwxStringtype(L, 2) : wxString(wxT("UTF-8")));
    // const wxString filename
    const wxString filename = wxlua_getwxStringtype(L, 1);
    // call constructor
    wxXmlDocument* returns = new wxXmlDocument(filename, encoding);
    // add to tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxXmlDocument);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxXmlDocument);

    return 1;
}

static int LUACALL wxLua_wxXmlDocument_constructor(lua_State *L);
// static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlDocument_constructor[1] = {{ wxLua_wxXmlDocument_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 0, g_wxluaargtypeArray_None }};
//     wxXmlDocument();
static int LUACALL wxLua_wxXmlDocument_constructor(lua_State *L)
{
    // call constructor
    wxXmlDocument* returns = new wxXmlDocument();
    // add to tracked memory list
    wxluaO_addgcobject(L, returns, wxluatype_wxXmlDocument);
    // push the constructed class pointer
    wxluaT_pushuserdatatype(L, returns, wxluatype_wxXmlDocument);

    return 1;
}




#if (wxLUA_USE_wxXML && wxUSE_XML)
// function overload table
static wxLuaBindCFunc s_wxluafunc_wxLua_wxXmlDocument_constructor_overload[] =
{
    { wxLua_wxXmlDocument_constructor1, WXLUAMETHOD_CONSTRUCTOR, 1, 2, s_wxluatypeArray_wxLua_wxXmlDocument_constructor1 },
    { wxLua_wxXmlDocument_constructor, WXLUAMETHOD_CONSTRUCTOR, 0, 0, g_wxluaargtypeArray_None },
};
static int s_wxluafunc_wxLua_wxXmlDocument_constructor_overload_count = sizeof(s_wxluafunc_wxLua_wxXmlDocument_constructor_overload)/sizeof(wxLuaBindCFunc);

#endif // (wxLUA_USE_wxXML && wxUSE_XML)

void wxLua_wxXmlDocument_delete_function(void** p)
{
    wxXmlDocument* o = (wxXmlDocument*)(*p);
    delete o;
}

// Map Lua Class Methods to C Binding Functions
wxLuaBindMethod wxXmlDocument_methods[] = {
    { "AppendToProlog", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlDocument_AppendToProlog, 1, NULL },
    { "DetachDocumentNode", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlDocument_DetachDocumentNode, 1, NULL },
    { "DetachRoot", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlDocument_DetachRoot, 1, NULL },
    { "GetDoctype", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlDocument_GetDoctype, 1, NULL },
    { "GetDocumentNode", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlDocument_GetDocumentNode, 1, NULL },
    { "GetEOL", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlDocument_GetEOL, 1, NULL },

#if (!wxUSE_UNICODE) && (wxLUA_USE_wxXML && wxUSE_XML)
    { "GetEncoding", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlDocument_GetEncoding, 1, NULL },
#endif // (!wxUSE_UNICODE) && (wxLUA_USE_wxXML && wxUSE_XML)

    { "GetFileEncoding", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlDocument_GetFileEncoding, 1, NULL },
    { "GetFileType", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlDocument_GetFileType, 1, NULL },
    { "GetRoot", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlDocument_GetRoot, 1, NULL },
    { "GetVersion", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlDocument_GetVersion, 1, NULL },
    { "IsOk", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlDocument_IsOk, 1, NULL },
    { "Load", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlDocument_Load, 1, NULL },
    { "Save", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlDocument_Save, 1, NULL },
    { "SetDoctype", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlDocument_SetDoctype, 1, NULL },
    { "SetDocumentNode", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlDocument_SetDocumentNode, 1, NULL },

#if (!wxUSE_UNICODE) && (wxLUA_USE_wxXML && wxUSE_XML)
    { "SetEncoding", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlDocument_SetEncoding, 1, NULL },
#endif // (!wxUSE_UNICODE) && (wxLUA_USE_wxXML && wxUSE_XML)

    { "SetFileEncoding", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlDocument_SetFileEncoding, 1, NULL },
    { "SetFileType", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlDocument_SetFileType, 1, NULL },
    { "SetRoot", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlDocument_SetRoot, 1, NULL },
    { "SetVersion", WXLUAMETHOD_METHOD, s_wxluafunc_wxLua_wxXmlDocument_SetVersion, 1, NULL },
    { "delete", WXLUAMETHOD_METHOD|WXLUAMETHOD_DELETE, s_wxluafunc_wxLua_wxXmlDocument_delete, 1, NULL },

#if (wxLUA_USE_wxXML && wxUSE_XML)
    { "wxXmlDocument", WXLUAMETHOD_CONSTRUCTOR, s_wxluafunc_wxLua_wxXmlDocument_constructor_overload, s_wxluafunc_wxLua_wxXmlDocument_constructor_overload_count, 0 },
#endif // (wxLUA_USE_wxXML && wxUSE_XML)

    { 0, 0, 0, 0 },
};

int wxXmlDocument_methodCount = sizeof(wxXmlDocument_methods)/sizeof(wxLuaBindMethod) - 1;

#endif  // wxLUA_USE_wxXML && wxUSE_XML



// ---------------------------------------------------------------------------
// ../modules/wxbind/src/wxxml_bind.cpp was generated by genwxbind.lua 
//
// Any changes made to this file will be lost when the file is regenerated.
// ---------------------------------------------------------------------------


// ---------------------------------------------------------------------------
// wxLuaGetEventList_wxxml() is called to register events
// ---------------------------------------------------------------------------

wxLuaBindEvent* wxLuaGetEventList_wxxml(size_t &count)
{
    static wxLuaBindEvent eventList[] =
    {

        { 0, 0, 0 },
    };
    count = sizeof(eventList)/sizeof(wxLuaBindEvent) - 1;
    return eventList;
}

// ---------------------------------------------------------------------------
// wxLuaGetDefineList_wxxml() is called to register #define and enum
// ---------------------------------------------------------------------------

wxLuaBindNumber* wxLuaGetDefineList_wxxml(size_t &count)
{
    static wxLuaBindNumber numberList[] =
    {
#if wxLUA_USE_wxXML && wxUSE_XML
        { "wxTextFileType_Dos", wxTextFileType_Dos },
        { "wxTextFileType_Mac", wxTextFileType_Mac },
        { "wxTextFileType_None", wxTextFileType_None },
        { "wxTextFileType_Os2", wxTextFileType_Os2 },
        { "wxTextFileType_Unix", wxTextFileType_Unix },
        { "wxXMLDOC_KEEP_WHITESPACE_NODES", wxXMLDOC_KEEP_WHITESPACE_NODES },
        { "wxXMLDOC_NONE", wxXMLDOC_NONE },
        { "wxXML_ATTRIBUTE_NODE", wxXML_ATTRIBUTE_NODE },
        { "wxXML_CDATA_SECTION_NODE", wxXML_CDATA_SECTION_NODE },
        { "wxXML_COMMENT_NODE", wxXML_COMMENT_NODE },
        { "wxXML_DOCUMENT_FRAG_NODE", wxXML_DOCUMENT_FRAG_NODE },
        { "wxXML_DOCUMENT_NODE", wxXML_DOCUMENT_NODE },
        { "wxXML_DOCUMENT_TYPE_NODE", wxXML_DOCUMENT_TYPE_NODE },
        { "wxXML_ELEMENT_NODE", wxXML_ELEMENT_NODE },
        { "wxXML_ENTITY_NODE", wxXML_ENTITY_NODE },
        { "wxXML_ENTITY_REF_NODE", wxXML_ENTITY_REF_NODE },
        { "wxXML_HTML_DOCUMENT_NODE", wxXML_HTML_DOCUMENT_NODE },
        { "wxXML_NOTATION_NODE", wxXML_NOTATION_NODE },
        { "wxXML_NO_INDENTATION", wxXML_NO_INDENTATION },
        { "wxXML_PI_NODE", wxXML_PI_NODE },
        { "wxXML_TEXT_NODE", wxXML_TEXT_NODE },
#endif // wxLUA_USE_wxXML && wxUSE_XML


        { 0, 0 },
    };
    count = sizeof(numberList)/sizeof(wxLuaBindNumber) - 1;
    return numberList;
}

// ---------------------------------------------------------------------------

// wxLuaGetStringList_wxxml() is called to register #define_string
// ---------------------------------------------------------------------------

wxLuaBindString* wxLuaGetStringList_wxxml(size_t &count)
{
    static wxLuaBindString stringList[] =
    {

        { 0, 0 },
    };
    count = sizeof(stringList)/sizeof(wxLuaBindString) - 1;
    return stringList;
}

// ---------------------------------------------------------------------------
// wxLuaGetObjectList_wxxml() is called to register object and pointer bindings
// ---------------------------------------------------------------------------

wxLuaBindObject* wxLuaGetObjectList_wxxml(size_t &count)
{
    static wxLuaBindObject objectList[] =
    {

        { 0, 0, 0, 0 },
    };
    count = sizeof(objectList)/sizeof(wxLuaBindObject) - 1;
    return objectList;
}

// ---------------------------------------------------------------------------
// wxLuaGetFunctionList_wxxml() is called to register global functions
// ---------------------------------------------------------------------------

// ---------------------------------------------------------------------------
// wxLuaGetFunctionList_wxxml() is called to register global functions
// ---------------------------------------------------------------------------

wxLuaBindMethod* wxLuaGetFunctionList_wxxml(size_t &count)
{
    static wxLuaBindMethod functionList[] =
    {

        { 0, 0, 0, 0 }, 
    };
    count = sizeof(functionList)/sizeof(wxLuaBindMethod) - 1;
    return functionList;
}



// ---------------------------------------------------------------------------
// wxLuaGetClassList_wxxml() is called to register classes
// ---------------------------------------------------------------------------

static const char* wxluaclassname_wxObject = "wxObject";
static const char* wxluaclassname_wxXmlAttribute = "wxXmlAttribute";
static const char* wxluaclassname_wxXmlDoctype = "wxXmlDoctype";
static const char* wxluaclassname_wxXmlDocument = "wxXmlDocument";
static const char* wxluaclassname_wxXmlNode = "wxXmlNode";

static const char* wxluabaseclassnames_wxXmlDocument[] = { wxluaclassname_wxObject, NULL };
static wxLuaBindClass* wxluabaseclassbinds_wxXmlDocument[] = { NULL };
// ---------------------------------------------------------------------------
// Lua Tag Method Values and Tables for each Class
// ---------------------------------------------------------------------------

#if wxLUA_USE_wxXML && wxUSE_XML
    extern wxLuaBindMethod wxXmlAttribute_methods[];
    extern int wxXmlAttribute_methodCount;
    extern void wxLua_wxXmlAttribute_delete_function(void** p);
    extern wxLuaBindMethod wxXmlDoctype_methods[];
    extern int wxXmlDoctype_methodCount;
    extern void wxLua_wxXmlDoctype_delete_function(void** p);
    extern wxLuaBindMethod wxXmlDocument_methods[];
    extern int wxXmlDocument_methodCount;
    extern void wxLua_wxXmlDocument_delete_function(void** p);
    extern wxLuaBindMethod wxXmlNode_methods[];
    extern int wxXmlNode_methodCount;
    extern void wxLua_wxXmlNode_delete_function(void** p);
#endif // wxLUA_USE_wxXML && wxUSE_XML




wxLuaBindClass* wxLuaGetClassList_wxxml(size_t &count)
{
    static wxLuaBindClass classList[] =
    {
#if wxLUA_USE_wxXML && wxUSE_XML
        { wxluaclassname_wxXmlAttribute, wxXmlAttribute_methods, wxXmlAttribute_methodCount, NULL, &wxluatype_wxXmlAttribute, NULL, NULL, NULL, NULL, NULL, 0, &wxLua_wxXmlAttribute_delete_function, }, 
        { wxluaclassname_wxXmlDoctype, wxXmlDoctype_methods, wxXmlDoctype_methodCount, NULL, &wxluatype_wxXmlDoctype, NULL, NULL, NULL, NULL, NULL, 0, &wxLua_wxXmlDoctype_delete_function, }, 
        { wxluaclassname_wxXmlDocument, wxXmlDocument_methods, wxXmlDocument_methodCount, CLASSINFO(wxXmlDocument), &wxluatype_wxXmlDocument, wxluabaseclassnames_wxXmlDocument, wxluabaseclassbinds_wxXmlDocument, NULL, NULL, NULL, 0, &wxLua_wxXmlDocument_delete_function, }, 
        { wxluaclassname_wxXmlNode, wxXmlNode_methods, wxXmlNode_methodCount, NULL, &wxluatype_wxXmlNode, NULL, NULL, NULL, NULL, NULL, 0, &wxLua_wxXmlNode_delete_function, }, 
#endif // wxLUA_USE_wxXML && wxUSE_XML


        { 0, 0, 0, 0, 0, 0, 0 }, 
    };
    count = sizeof(classList)/sizeof(wxLuaBindClass) - 1;

    return classList;
}

// ---------------------------------------------------------------------------
// wxLuaBinding_wxxml() - the binding class
// ---------------------------------------------------------------------------

IMPLEMENT_DYNAMIC_CLASS(wxLuaBinding_wxxml, wxLuaBinding)

wxLuaBinding_wxxml::wxLuaBinding_wxxml() : wxLuaBinding()
{
    m_bindingName   = wxT("wxxml");
    m_nameSpace     = wxT("wx");
    m_classArray    = wxLuaGetClassList_wxxml(m_classCount);
    m_numberArray   = wxLuaGetDefineList_wxxml(m_numberCount);
    m_stringArray   = wxLuaGetStringList_wxxml(m_stringCount);
    m_eventArray    = wxLuaGetEventList_wxxml(m_eventCount);
    m_objectArray   = wxLuaGetObjectList_wxxml(m_objectCount);
    m_functionArray = wxLuaGetFunctionList_wxxml(m_functionCount);
    InitBinding();
}



// ---------------------------------------------------------------------------

wxLuaBinding* wxLuaBinding_wxxml_init()
{
    static wxLuaBinding_wxxml m_binding;

    if (wxLuaBinding::GetBindingArray().Index(&m_binding) == wxNOT_FOUND)
        wxLuaBinding::GetBindingArray().Add(&m_binding);

    return &m_binding;
}


